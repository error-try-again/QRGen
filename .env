# ---------------
# Server Configs
# ---------------
BACKEND_PORT=3001
EXPOSED_NGINX_PORT=8080
INTERNAL_NGINX_PORT=80
NGINX_SSL_PORT=443
CHALLENGE_PORT=80
DNS_RESOLVER=8.8.8.8
NODE_VERSION=latest
TIMEOUT=5

# -------------------------------
# Domain and Origin Configuration
# -------------------------------
DOMAIN_NAME=localhost
SUBDOMAIN=www
BACKEND_SCHEME=http
ORIGIN_URL="${BACKEND_SCHEME}://${DOMAIN_NAME}"
ORIGIN_PORT="${EXPOSED_NGINX_PORT}"
ORIGIN="${ORIGIN_URL}:${ORIGIN_PORT}"
AUTO_INSTALL=false

# ------------------------
# General SSL Configuration
# ------------------------
USE_SSL=false
USE_SELF_SIGNED_CERTS=false
REGENERATE_SSL_CERTS=false

# LetsEncrypt Configurations
LETSENCRYPT_EMAIL=""
USE_AUTO_RENEW_SSL=false
USE_OVERWRITE_SELF_SIGNED_CERTS=false
USE_FORCE_RENEW=false
USE_LETSENCRYPT=false
USE_PRODUCTION_SSL=false
USE_HSTS=false
USE_OCSP_STAPLING=false
USE_MUST_STAPLE=false
USE_UIR=false
USE_DRY_RUN=false
USE_CUSTOM_DOMAIN=false
USE_STRICT_PERMISSIONS=false

# LetsEncrypt Flags
TOS_FLAG=--agree-tos
NO_EFF_EMAIL_FLAG=--no-eff-email
NON_INTERACTIVE_FLAG=--non-interactive
RSA_KEY_SIZE=4096
RSA_KEY_SIZE_FLAG="--rsa-key-size $RSA_KEY_SIZE"
WEBROOT_FLAG=--webroot
WEBROOT_PATH_FLAG=--webroot-path

# TLS version usage
USE_TLS13=false
USE_TLS12=false

# Nginx Configurations
USE_GZIP=false
BACKEND_UPSTREAM_NAME=backend
NGINX_PID=""
NGINX_ERROR_LOG=""
NGINX_ACCESS_LOG=""

# ------------------
# Certbot Image Configs
# ------------------
BUILD_CERTBOT_IMAGE=false
CERTBOT_BASE_IMAGE=python:3.10-alpine3.16
CERTBOT_REPO=https://github.com/error-try-again/certbot/archive/refs/heads/master.zip

# ------------------
# Directory Structure
# ------------------
PROJECT_ROOT_DIR="${HOME}/QRGen"
PROJECT_LOGS_DIR="${PROJECT_ROOT_DIR}/logs"
BACKEND_DIR="${PROJECT_ROOT_DIR}/backend"
FRONTEND_DIR="${PROJECT_ROOT_DIR}/frontend"
CERTBOT_DIR="${PROJECT_ROOT_DIR}/certbot"
CERTS_DIR="${PROJECT_ROOT_DIR}/certs"
WEBROOT_DIR="${PROJECT_ROOT_DIR}/webroot"
INTERNAL_CERTS_DH_DIR="/etc/ssl/certs/dhparam"
INTERNAL_WEBROOT_DIR="/usr/share/nginx/html"
CERTS_DH_DIR="${CERTS_DIR}/dhparam"

# ------------------
# File Configurations
# ------------------
NGINX_CONF_FILE="${PROJECT_ROOT_DIR}/nginx.conf"
DOCKER_COMPOSE_FILE="${PROJECT_ROOT_DIR}/docker-compose.yml"
BACKEND_DOTENV_FILE="${BACKEND_DIR}/.env"
BACKEND_DOCKERFILE="${BACKEND_DIR}/Dockerfile"
FRONTEND_DOCKERFILE="${FRONTEND_DIR}/Dockerfile"
FRONTEND_DOTENV_FILE="${FRONTEND_DIR}/.env"
CERTBOT_DOCKERFILE="${CERTBOT_DIR}/Dockerfile"
DH_PARAMS_FILE="${INTERNAL_CERTS_DH_DIR}/dhparam.pem"
ROBOTS_FILE="${FRONTEND_DIR}/robots.txt"
SITEMAP_XML="${FRONTEND_DIR}/sitemap.xml"

# ------------------
# Docker Specific
# ------------------
DISABLE_DOCKER_CACHING=false

# ------------------
# Google API Configs
# ------------------
USE_GOOGLE_API_KEY=false
GOOGLE_MAPS_API_KEY=""

# ------------------
# Submodule Configs
# ------------------
RELEASE_BRANCH=full-release
FRONTEND_SUBMODULE_URL=https://github.com/error-try-again/QRGen-frontend.git
BACKEND_SUBMODULE_URL=https://github.com/error-try-again/QRGen-backend.git

# ------------------
# Volume Mappings
# ------------------
LETSENCRYPT_VOLUME_MAPPING="${CERTS_DIR}:/etc/letsencrypt"
LETSENCRYPT_LOGS_VOLUME_MAPPING="${CERTBOT_DIR}/logs:/var/log/letsencrypt"
CERTS_DH_VOLUME_MAPPING="${CERTS_DH_DIR}:${INTERNAL_CERTS_DH_DIR}"
WEBROOT_VOLUME_MAPPING="${WEBROOT_DIR}:${INTERNAL_WEBROOT_DIR}"

# ------------------
# JSON Install Configs
# ------------------
INSTALL_PROFILE=scripts/config/profiles/installer_profiles.json
LETSENCRYPT_AUTO_PROFILE=scripts/config/profiles/installer_letsencrypt_auto.json
